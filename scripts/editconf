#!/bin/bash

usage="Edit or generate shortcutted config files.\n\
Usage:\n\
	editconf [options] [shortcut_names...]\n\
Options:\n\
	-g, --generate          generate shortcuts for other programs\n\
	-p, --program PROGRAM   open shortcut_name(s) in PROGRAM\n\
	-l, --list              list available shortcut shortcut names\n\
	-h, --help              show this help message\n\
\n\
With no parameters, open shortcut_name(s) in neovim"

shortcuts_file=~/scripts/shortcuts

generate_shortcuts() {
	vim_file="$HOME/.config/nvim/shortcuts.vim"
	rm -f $vim_file
	echo "let g:my_shortcuts = {" > $vim_file
	echo "$shortcuts" | sed "s/^\(.*\)\s\+\(.*\)$/	\\\\ '\1': '\2',/" >> $vim_file
	echo "\ }" >> $vim_file

	echo "Successfully generated shortcuts."
}

# Argument 1: program to open with
# Argument 2+: shortcut names
open_shortcut() {
	paths=()
	for shortcut_name in ${@:2}; do
		path=$(echo "$shortcuts" | grep "^$shortcut_name\\s" | cut -f2)
		[[ -n "$path" ]] && paths+=("$path") || echo "Could not find shortcut $shortcut_name."
	done
	if [[ -n "$paths" ]]; then
		eval "$1 ${paths[@]}"
	else
		echo "No valid shortcuts given, exiting."
	fi
}

shortcuts=$(sed "/\(^\s*#\)\|\(^$\)/d" $shortcuts_file)
case $1 in
	-g|--generate) generate_shortcuts ;;
	-p|--program) open_shortcut $2 ${@:3} ;;
	-h|--help) echo -e "$usage" ;;
	-l|--list) echo "$shortcuts" | cut -f1 ;;
	*) open_shortcut nvim $@ ;;
esac

# vim: set ts=3 noet :

